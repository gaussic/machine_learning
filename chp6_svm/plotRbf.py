'''
Created on Nov 26, 2010

@author: Peter
'''
from numpy import *
import matplotlib
import matplotlib.pyplot as plt
from matplotlib.patches import Circle

def plotrbf():
    xcord0 = []; ycord0 = []; xcord1 = []; ycord1 = []
    fw = open('testSetRBF2.txt', 'w')#generate data

    fig = plt.figure()
    ax = fig.add_subplot(111)
    xcord0 = []; ycord0 = []; xcord1 = []; ycord1 = []
    for i in range(100):
        [x,y] = random.uniform(0,1,2)
        xpt=x*cos(2.0*pi*y); ypt = x*sin(2.0*pi*y)
        if (x > 0.5):
            xcord0.append(xpt); ycord0.append(ypt)
            label = -1.0
        else:
            xcord1.append(xpt); ycord1.append(ypt)
            label = 1.0
        fw.write('%f\t%f\t%f\n' % (xpt, ypt, label))
    ax.scatter(xcord0,ycord0, marker='s', s=90)
    ax.scatter(xcord1,ycord1, marker='o', s=50, c='red')
    plt.title('Non-linearly Separable Data for Kernel Method')
    plt.show()
    fw.close()
    
def plotsv_rbf(circles):

    xcord0 = []
    ycord0 = []
    xcord1 = []
    ycord1 = []
    markers =[]
    colors =[]
    fr = open('testSetRBF.txt')#this file was generated by 2normalGen.py
    for line in fr.readlines():
        lineSplit = line.strip().split('\t')
        xPt = float(lineSplit[0])
        yPt = float(lineSplit[1])
        label = float(lineSplit[2])
        if (label == -1):
            xcord0.append(xPt)
            ycord0.append(yPt)
        else:
            xcord1.append(xPt)
            ycord1.append(yPt)

    fr.close()
    fig = plt.figure()
    ax = fig.add_subplot(111)
    ax.scatter(xcord0,ycord0, marker='s', s=20)
    ax.scatter(xcord1,ycord1, marker='o', s=20, c='red')
    plt.title('Support Vectors Circled')
    for circle_p in circles:
        circle = Circle((circle_p[0], circle_p[1]), 0.05, facecolor='none', edgecolor=(0,0.8,0.8), linewidth=3, alpha=0.5)
        ax.add_patch(circle)
    #plt.plot([2.3,8.5], [-6,6]) #seperating hyperplane
    # b = -3.75567; w0=0.8065; w1=-0.2761
    plt.show()